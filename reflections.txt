How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Because I can see where is a diff between two versions of a file, I can quickly exactly locate 
	bug

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I can view all the diff that happens in each version of a file, that benefit help me 
	control and manage my code

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    

How can you use the commands git log and git diff to view the history of files?

    git log --stat use to view all history and all changed details
	git diff use to compare two commit id and see what diff between them

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    I want to use Git to control my project
	
What happens when you initialize a repository? Why do you need to do it?

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	Staging area is the area that you will add new files to commit to Git. Working directory contains all
	files that you copy into it but if you don't add it into staging area, it will be invisible to Git.
	The repository is where you commit all files that you have just added into staging area.

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?